import { z } from "zod";

const renewableEnergyCustomCreationSteps = z.enum([
  "RENEWABLE_ENERGY_PHOTOVOLTAIC_KEY_PARAMETER",
  "RENEWABLE_ENERGY_PHOTOVOLTAIC_POWER",
  "RENEWABLE_ENERGY_PHOTOVOLTAIC_SURFACE",
  "RENEWABLE_ENERGY_PHOTOVOLTAIC_EXPECTED_ANNUAL_PRODUCTION",
  "RENEWABLE_ENERGY_PHOTOVOLTAIC_CONTRACT_DURATION",
  "RENEWABLE_ENERGY_SOILS_DECONTAMINATION_INTRODUCTION",
  "RENEWABLE_ENERGY_SOILS_DECONTAMINATION_SELECTION",
  "RENEWABLE_ENERGY_SOILS_DECONTAMINATION_SURFACE_AREA",
  "RENEWABLE_ENERGY_SOILS_TRANSFORMATION_INTRODUCTION",
  "RENEWABLE_ENERGY_NON_SUITABLE_SOILS_NOTICE",
  "RENEWABLE_ENERGY_NON_SUITABLE_SOILS_SELECTION",
  "RENEWABLE_ENERGY_NON_SUITABLE_SOILS_SURFACE",
  "RENEWABLE_ENERGY_SOILS_TRANSFORMATION_PROJECT_SELECTION",
  "RENEWABLE_ENERGY_SOILS_TRANSFORMATION_CUSTOM_SOILS_SELECTION",
  "RENEWABLE_ENERGY_SOILS_TRANSFORMATION_CUSTOM_SURFACE_AREA_ALLOCATION",
  "RENEWABLE_ENERGY_SOILS_TRANSFORMATION_CLIMATE_AND_BIODIVERSITY_IMPACT_NOTICE",
  "RENEWABLE_ENERGY_SOILS_SUMMARY",
  "RENEWABLE_ENERGY_SOILS_CARBON_STORAGE",
  "RENEWABLE_ENERGY_STAKEHOLDERS_INTRODUCTION",
  "RENEWABLE_ENERGY_STAKEHOLDERS_PROJECT_DEVELOPER",
  "RENEWABLE_ENERGY_STAKEHOLDERS_FUTURE_OPERATOR",
  "RENEWABLE_ENERGY_STAKEHOLDERS_REINSTATEMENT_CONTRACT_OWNER",
  "RENEWABLE_ENERGY_STAKEHOLDERS_FUTURE_SITE_OWNER",
  "RENEWABLE_ENERGY_STAKEHOLDERS_SITE_PURCHASE",
  "RENEWABLE_ENERGY_EXPENSES_INTRODUCTION",
  "RENEWABLE_ENERGY_EXPENSES_SITE_PURCHASE_AMOUNTS",
  "RENEWABLE_ENERGY_EXPENSES_REINSTATEMENT",
  "RENEWABLE_ENERGY_EXPENSES_PHOTOVOLTAIC_PANELS_INSTALLATION",
  "RENEWABLE_ENERGY_EXPENSES_PROJECTED_YEARLY_EXPENSES",
  "RENEWABLE_ENERGY_REVENUE_INTRODUCTION",
  "RENEWABLE_ENERGY_REVENUE_PROJECTED_YEARLY_REVENUE",
  "RENEWABLE_ENERGY_REVENUE_FINANCIAL_ASSISTANCE",
  "RENEWABLE_ENERGY_SCHEDULE_INTRODUCTION",
  "RENEWABLE_ENERGY_SCHEDULE_PROJECTION",
  "RENEWABLE_ENERGY_NAMING",
  "RENEWABLE_ENERGY_PROJECT_PHASE",
  "RENEWABLE_ENERGY_FINAL_SUMMARY",
  "RENEWABLE_ENERGY_CREATION_RESULT",
]);

export type RenewableEnergyCustomCreationStep = z.infer<typeof renewableEnergyCustomCreationSteps>;

const isRenewableEnergyCustomCreationStep = (
  step: string,
): step is RenewableEnergyCustomCreationStep => {
  return renewableEnergyCustomCreationSteps.safeParse(step).success;
};

const renewableEnergyExpressCreationStep = z.enum([
  "RENEWABLE_ENERGY_EXPRESS_FINAL_SUMMARY",
  "RENEWABLE_ENERGY_CREATION_RESULT",
]);

type RenewableEnergyExpressCreationStep = z.infer<typeof renewableEnergyExpressCreationStep>;

const isRenewableEnergyExpressCreationStep = (
  step: string,
): step is RenewableEnergyExpressCreationStep => {
  return renewableEnergyExpressCreationStep.safeParse(step).success;
};

export const isRenewableEnergyCreationStep = (step: string) => {
  return (
    step === "RENEWABLE_ENERGY_CREATE_MODE_SELECTION" ||
    step === "RENEWABLE_ENERGY_TYPES" ||
    isRenewableEnergyCustomCreationStep(step) ||
    isRenewableEnergyExpressCreationStep(step)
  );
};
export type RenewableEnergyCreationStep =
  | "RENEWABLE_ENERGY_CREATE_MODE_SELECTION"
  | "RENEWABLE_ENERGY_TYPES"
  | RenewableEnergyExpressCreationStep
  | RenewableEnergyCustomCreationStep;
