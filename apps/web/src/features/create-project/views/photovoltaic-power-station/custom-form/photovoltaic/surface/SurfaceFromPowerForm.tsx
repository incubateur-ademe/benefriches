import { useForm } from "react-hook-form";
import { convertSquareMetersToHectares, PHOTOVOLTAIC_RATIO_M2_PER_KWC } from "shared";

import {
  formatNumberFr,
  formatSurfaceArea,
  SQUARE_METERS_HTML_SYMBOL,
} from "@/shared/core/format-number/formatNumber";
import BackNextButtonsGroup from "@/shared/views/components/BackNextButtons/BackNextButtons";
import RowDecimalsNumericInput from "@/shared/views/components/form/NumericInput/RowDecimalsNumericInput";
import { requiredNumericFieldRegisterOptions } from "@/shared/views/components/form/NumericInput/registerOptions";
import RequiredLabel from "@/shared/views/components/form/RequiredLabel/RequiredLabel";
import FormDefinition from "@/shared/views/layout/WizardFormLayout/FormDefinition";
import FormInfo from "@/shared/views/layout/WizardFormLayout/FormInfo";
import WizardFormLayout from "@/shared/views/layout/WizardFormLayout/WizardFormLayout";

type Props = {
  initialValues: FormValues;
  onSubmit: (data: FormValues) => void;
  onBack: () => void;
  recommendedSurface: number;
  electricalPowerKWc: number;
  siteSurfaceArea: number;
};

type FormValues = {
  photovoltaicInstallationSurfaceSquareMeters: number;
};

function PhotovoltaicSurfaceFromPowerForm({
  initialValues,
  onSubmit,
  onBack,
  electricalPowerKWc,
  recommendedSurface,
  siteSurfaceArea,
}: Props) {
  const { register, handleSubmit, watch, formState } = useForm<FormValues>({
    defaultValues: initialValues,
  });

  const hintText = `Maximum conseill√© : ${formatSurfaceArea(siteSurfaceArea)}`;

  const maxErrorMessage = `La superficie des panneaux ne peut pas √™tre sup√©rieure √† la superficie totale du site (${formatSurfaceArea(
    siteSurfaceArea,
  )}).`;

  const surface = watch("photovoltaicInstallationSurfaceSquareMeters");

  return (
    <WizardFormLayout
      title="Quelle superficie fera l'installation ?"
      instructions={
        <>
          <FormInfo>
            <p>
              Le ratio superficie / puissance d'installation consid√©r√© est de{" "}
              <strong>
                {formatSurfaceArea(PHOTOVOLTAIC_RATIO_M2_PER_KWC * 1000)} pour 1 000 kWc.
              </strong>
            </p>
            <p>
              Pour la puissance que vous avez renseign√© ({formatNumberFr(electricalPowerKWc)}
              &nbsp;kWc), la superficie occup√©e par les panneaux devrait donc √™tre de{" "}
              {formatSurfaceArea(recommendedSurface)}.
            </p>
            <p>Vous pouvez modifier cette superficie.</p>

            <p>
              La superficie d'installation des panneaux ne peut √™tre sup√©rieure √† la superficie
              totale de la friche ({formatSurfaceArea(siteSurfaceArea)}).
            </p>
          </FormInfo>

          <FormDefinition>
            <p>
              Une centrale au sol peut facilement √™tre implant√©e sur des espaces imperm√©abilis√©s
              (non b√¢tis) ou min√©ralis√©s, mais √©galement sur des espaces enherb√©s ou avec de la
              v√©g√©tation basse (broussailles, garrigue, etc.) qu'ils soient artificialis√©s ou
              naturels.
            </p>
            <p>
              D√®s lors que de la v√©g√©tation haute est pr√©sente (sols artificiels ou prairies
              arbor√©s, for√™ts), l'implantation n√©cessite des investissements (coupes) et est √†
              √©viter (pour des raisons de biodiversit√© et de puits de carbone).
            </p>
            <p>Le devenir des sols sera abord√© plus loin dans le formulaire.</p>
          </FormDefinition>
        </>
      }
    >
      <form onSubmit={handleSubmit(onSubmit)}>
        <RowDecimalsNumericInput
          className="!tw-pt-4 tw-pb-6"
          addonText={SQUARE_METERS_HTML_SYMBOL}
          hintText={hintText}
          hintInputText={
            !isNaN(surface) && (
              <p>
                üí° Soit <strong>{formatNumberFr(convertSquareMetersToHectares(surface))}</strong>{" "}
                ha.
              </p>
            )
          }
          label={<RequiredLabel label="Superficie de l'installation" />}
          nativeInputProps={register("photovoltaicInstallationSurfaceSquareMeters", {
            ...requiredNumericFieldRegisterOptions,
            max: {
              value: siteSurfaceArea,
              message: maxErrorMessage,
            },
          })}
        />
        <BackNextButtonsGroup onBack={onBack} nextLabel="Valider" disabled={!formState.isValid} />
      </form>
    </WizardFormLayout>
  );
}

export default PhotovoltaicSurfaceFromPowerForm;
